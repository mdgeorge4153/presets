MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=2.000000
fDecay=0.700000
fVideoEchoZoom=2.000000
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=4
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.001000
fWaveScale=0.011726
fWaveSmoothing=0.900000
fWaveParam=0.000000
fModWaveAlphaStart=0.750000
fModWaveAlphaEnd=0.950000
fWarpAnimSpeed=1.000000
fWarpScale=1.331000
fZoomExponent=1.0
fShader=0.000000
zoom=1.01
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.0010
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.400000
wave_b=0.300000
wave_x=0.500000
wave_y=0.500000
ob_size=0.005000
ob_r=0.000000
ob_g=0.000000
ob_b=0.000000
ob_a=1.000000
ib_size=0.260000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=0.000000
nMotionVectorsX=0.000000
nMotionVectorsY=43.199997
mv_dx=1.000000
mv_dy=1.000000
mv_l=1.000000
mv_r=1.000000
mv_g=0.910000
mv_b=0.710000
mv_a=0.000000
b1n=0.000000
b2n=0.000000
b3n=0.000000
b1x=1.000000
b2x=1.000000
b3x=1.000000
b1ed=0.250000
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.000000
wavecode_2_smoothing=0.500000
wavecode_2_r=1.000000
wavecode_2_g=0.600000
wavecode_2_b=0.100000
wavecode_2_a=1.000000
wave_2_per_frame='''
    t1=sin(.01*time)*0.5+0.5;
    t2=sin(.01*(time+2.1))*0.5+0.5;
    t3=sin(.01*(time+4.2))*0.5+0.5;
    
    t4=sin(.01*(time+1.1))*0.5+0.5;
    t5=sin(.01*(time+3.1))*0.5+0.5;
    t6=sin(.01*(time+5.2))*0.5+0.5;
    
    
    t8= int( sin(.01*time*2)*2 + 3);
'''
wave_2_per_point='''
    n=sample*6.283;
    phs=-sample * 0.2;
    tm=q1 + phs;
    
    flip=1-flip;
    
    
    xp=0;
    yp=flip*0.05 + (sin(tm)*0.5 + 0.5)*0.2;
    zp=0;
    
    //wrist movement;
    ang=sin(tm*2)*0.5 +0.5;
    
    xq=xp;
    sinang=sin(ang);cosang=cos(ang);
    // yq=yp*sinang + zp*cosang;
    // zq=yp*cosang - zp*sinang;
    yq=yp;
    zq=zp;
    
    ang=tm*8 + 1;
    sinang=sin(ang);cosang=cos(ang);
    xp=xq*sinang + yq*cosang;
    yp=xq*cosang - yq*sinang;
    zp=zq;
    
    //forearm movement;
    zp=zp-0.3;
    ang=3.14 + sin(tm*2 - 0.5)*1.5;
    sinang=sin(ang);cosang=cos(ang);
    xq=xp;
    yq=yp*sinang + zp*cosang;
    zq=yp*cosang - zp*sinang;
    
    //upper arm twist
    ang=-1.0 + cos(tm*3.1 + 0.5);
    sinang=sin(ang);cosang=cos(ang);
    xp=xq*sinang + yq*cosang;
    yp=xq*cosang - yq*sinang;
    zp=zq;
    
    //upper arm outward;
    zp=zp-0.35;
    ang=cos(tm*2.3)*1.75 - 1.05;
    sinang=sin(ang);cosang=cos(ang);
    xq=xp*sinang + zp*cosang;
    yq=yp;
    zq=xp*cosang - zp*sinang;
    
    //upper arm up down;
    ang=cos(tm)*0.5 - 0.5;
    sinang=sin(ang);cosang=cos(ang);
    xp=xq;
    yp=yq*cosang - zq*sinang;
    zp=yq*sinang + zq*cosang;
    
    //xp=xq;yp=yq;zp=zq;
    
    
    //project into screenspace and draw on screen
    zp=zp+2;
    xs=xp/zp;
    ys=yp/zp;
    
    x=xs+0.5;
    y=ys*1.3+0.5;
    
    a=if( equal(q8,1) , (1-sample) , sample);
    
    
    a=a* above( sin(tm*128*t8) , 0 )+.5;
    
    
    r=t4;
    g=t5;
    b=t6;
    
'''
per_frame_='''
    wave_a = 0;
    //decay = 0.1;
    
    vol = (bass_att + treb_att + mid_att)*.333333;
    
    tic = min(time-tin,.1);
    tin = time;
    
    ra = 10;
    treb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);
    mid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);
    bass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);
    vav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);
    
    tt = tt + tic*treb_avg;
    mt = mt + tic*mid_avg;
    bt = bt + tic*bass_avg;
    
    sp = abs(vav - slide)*.1;
    slide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;
    toc = 1;
    
    vt = vt + tic*slide;
    
    q1 = bt;
    q2 = mt;
    q3 = tt;
    q4 = slide*1;
    q5 = vt*.05 + 150;
    
    q6 = tic;
'''
warp_='''
    `shader_body
    `{
    `float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;
    `float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);
    `
    `float2 adj = texsize.zw;
    `// //float2 adj = 0;
    `// 
    `float2 uvn = uv + .005*noiseVal + float2(-1.1,-1.5)*adj;
    `// 
    `// sample previous frame
    `    ret = tex2D( sampler_main, uv ).xyz;
    `// darken (decay) over time
    `ret.x = (ret.x-1.4*q6)*(1-q6*2.5); //or try: ret -= 0.004;
    `
    `
    `float burn = saturate(GetBlur1(uvn).x - noiseVal*.15);
    `float fuel = pow(ret.z*1 + GetBlur1(uv).z*.0,1);
    `
    `ret.y = 0;
    `
    `if (burn > 0.1)
    `{
    `ret.x = fuel*q6*160;
    `ret.z -= ret.z*q6*120;
    `}
    `
    `else {ret.z += 1.3*q6;
    `//ret.x = 0;
    `}
    `
    `}
'''
comp_='''
    shader_body
    {
    // 
    ret = tex2D(sampler_main, uv).x,
    //
    //ret = lerp (
    //    GetBlur1(uv).x + GetBlur3(uv).x,
    //    ret,
    //    pow(ret,1));
    //   
    // //  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;
    //    ret = pow(ret,float3(5,1,.5));
    //    ret *= 1.0; //gamma
    //  
    }
'''
