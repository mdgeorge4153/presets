MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2

[preset00]
fShader=0.0
fDecay=1
fGammaAdj=1.980
warp=0
zoom=1
dx=-0.002
wrap=0

# disable built-in wave
fWaveAlpha=0

per_frame_='''
    phase1 = time + 3.14159*0;
    phase3 = time + 3.14159*.66;
    phase2 = time + 3.14159*1.33;

    // the y values of the 3 strands
    q1 = .5 + .1*sin(phase1);
    q2 = .5 + .1*sin(phase2);
    q3 = .5 + .1*sin(phase3);

    // the slopes of the 3 strands
    q4 = -cos(.5*phase1);
    q5 = -cos(.5*phase2);
    q6 = -cos(.5*phase3);

    // there are 6 possible orderings between the 3 strands:
    //   123 => 132 => 312 => 321 => 231 => 213 => repeat
    // the `q8` variable indicates which region we're in:
    //    0  =>  1  =>  2  =>  3  =>  4  =>  5  => repeat

    q8 = (6*time/3.14159)%6;
'''

wavecode_0_enabled=1
wavecode_0_samples=500
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1

wave_0_per_point='''
    // 1st strand (see per frame code)
    is1 = equal(q8, 0) | equal(q8, 1);
    is2 = equal(q8, 4) | equal(q8, 5);
    is3 = equal(q8, 2) | equal(q8, 3);

    posx = .5;
    posy = is1*q1 + is2*q2 + is3*q3;

    slopex = 1;
    slopey = is1*q4 + is2*q5 + is3*q6;

    r = is1*.01;
    g = is2*.01;
    b = is3*.01;
    a = 1;

    x = posx + (sample-.5)*.06*slopex;
    y = posy + (sample-.5)*.06*slopey;
'''

wavecode_1_enabled=1
wavecode_1_samples=500
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1

wave_1_per_point='''
    // 2nd strand (see per frame code)
    is1 = equal(q8, 2) | equal(q8, 5);
    is2 = equal(q8, 0) | equal(q8, 3);
    is3 = equal(q8, 1) | equal(q8, 4);

    posx = .5;
    posy = is1*q1 + is2*q2 + is3*q3;

    slopex = 1;
    slopey = is1*q4 + is2*q5 + is3*q6;

    r = is1*.5;
    g = is2*.5;
    b = is3*.5;
    a = 1;

    x = posx + (sample-.5)*.06*slopex;
    y = posy + (sample-.5)*.06*slopey;
'''

wavecode_2_enabled=1
wavecode_2_samples=500
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1

wave_2_per_point='''
    // 3rd strand (see per frame code)
    is1 = equal(q8, 3) | equal(q8, 4);
    is2 = equal(q8, 1) | equal(q8, 2);
    is3 = equal(q8, 0) | equal(q8, 5);

    posx = .5;
    posy = is1*q1 + is2*q2 + is3*q3;

    slopex = 1;
    slopey = is1*q4 + is2*q5 + is3*q6;

    r = is1*.75;
    g = is2*.75;
    b = is3*.75;
    a = 1;

    x = posx + (sample-.5)*.06*slopex;
    y = posy + (sample-.5)*.06*slopey;
'''

warp_='''
    shader_body {
        ret = tex2D(sampler_pc_main, uv);
    }
'''

comp_='''
    sampler sampler_rand00;
    sampler sampler_rand01;
    sampler sampler_rand02;
    shader_body {
        ret = tex2D(sampler_main,uv);
        if (ret.x >= ret.y && ret.x >= ret.z && ret.x > 0.005) {
            ret.y = 0;
            ret.z = 0;
            // ret = tex2D(sampler_rand00, mul(rot_d1, uv));
            ret.x = 1;
        }
        else if (ret.y >= ret.x && ret.y >= ret.z && ret.y > 0.005) {
            ret.x = 0;
            ret.z = 0;
            //ret = tex2D(sampler_rand01, mul(rot_d2, uv));
            ret.y = 1;
        }
        else if (ret.z >= ret.x && ret.z >= ret.y && ret.z > 0.005) {
            ret.x = 0;
            ret.y = 0;
            //ret = tex2D(sampler_rand02, mul(rot_d3, uv));
            ret.z = 1;
        }
        else {
            ret = mul(rot_d4, float3(0,0,.4));
        }
        //ret = tex2D(sampler_main, uv);
    }
'''

