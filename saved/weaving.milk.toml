MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2

[preset00]
fShader=0.0
fDecay=1
fGammaAdj=1.980
warp=0
zoom=1

# disable built-in wave
wave_a=0

wavecode_0_enabled=1
wavecode_0_samples=100
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1

wave_0_per_point='''
    phase  = 3.1416*0;

    posx   = .5;
    posy   = .5 + .1*sin(time + phase);

    slopex = 1;
    slopey = -cos(time + phase);

    posz = .01 + below(sin(2*(time + phase)), 0);

    edge = below(sample, 0.1) + above(sample, 0.9);
    r = posz;
    g = 0;
    b = 0;
    a = 1;

    x = posx + (sample-.5)*.03*slopex;
    y = posy + (sample-.5)*.03*slopey;
'''

wavecode_1_enabled=1
wavecode_1_samples=100
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1

wave_1_per_point='''
    phase  = 3.1416*0.66;

    posx   = .5;
    posy   = .5 + .1*sin(time + phase);

    slopex = 1;
    slopey = -cos(time + phase);

    posz = .01 + below(sin(2*(time + phase)), 0);

    edge = below(sample, 0.1) + above(sample, 0.9);
    r = posz;
    g = 0;
    b = 0;
    a = 1;

    x = posx + (sample-.5)*.03*slopex;
    y = posy + (sample-.5)*.03*slopey;
'''

wavecode_2_enabled=1
wavecode_2_samples=100
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1

wave_2_per_point='''
    phase  = 3.1416*1.33;

    posx   = .5;
    posy   = .5 + .1*sin(time + phase);

    slopex = 1;
    slopey = -cos(time + phase);

    posz = .01 + below(sin(2*(time + phase)), 0);

    edge = below(sample, 0.1) + above(sample, 0.9);
    r = posz;
    g = 0;
    b = 0;
    a = 1;

    x = posx + (sample-.5)*.03*slopex;
    y = posy + (sample-.5)*.03*slopey;
'''

warp_='''
    shader_body {
        ret = tex2D(sampler_pc_main, uv + float2(0.0005, 0));
        if (progress < 0.01) {
            ret = 0;
        }
    }
'''

comp_='''
    shader_body {
        ret = tex2D(sampler_main, uv);
        if (ret.x >= ret.y && ret.x >= ret.z && ret.x > 0.005) {
            ret.y = 0;
            ret.z = 0;
            ret = tex2D(sampler_rand0, mul(rot_d1, uv));
        }
        else if (ret.y >= ret.x && ret.y >= ret.z && ret.y > 0.005) {
            ret.x = 0;
            ret.z = 0;
            ret = tex2D(sampler_rand1, mul(rot_d2, uv));
        }
        else if (ret.z >= ret.x && ret.z >= ret.y && ret.z > 0.005) {
            ret.x = 0;
            ret.y = 0;
            ret = tex2D(sampler_rand2, mul(rot_d3, uv));
        }
        else {
            ret = mul(rot_d4, float3(0,0,.4));
        }

        //if (ret.y > 0) { ret.y = 1; }
        //if (ret.x > 0) { ret.x = 1; }
        //if (ret.z > 0) { ret.z = 1; }
    }
'''

