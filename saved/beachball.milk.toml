MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2

[preset00]
fShader=0.0
fGammaAdj=1.980
warp=0
zoom=1

# disable built-in wave
wave_a=0

# custom wave
wavecode_1_enabled=1
wavecode_1_samples=500
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_smoothing=0.5

wave_1_init='''
    reg00 = .5;
    reg01 = .8;

    reg02 = .15;
    reg03 = 0;
'''

per_frame_='''
    dt = 1/fps;

    // motion
    reg00 = reg00 + reg02*dt;
    reg01 = reg01 + reg03*dt;

    reg03 = reg03 - .9*dt; // gravity

    // collision with left side
    is_left = below(reg00, 0)*below(reg02,0);
    reg00  = is_left*(-reg00)  + (1-is_left)*reg00;
    reg02 = is_left*(-reg02) + (1-is_left)*reg02;

    // collision with right side
    is_right = above(reg00, 1)*above(reg02,0);
    reg00  = is_right*(2 - reg00) + (1-is_right)*reg00;
    reg02 = is_right*(-reg02)   + (1-is_right)*reg02;

    // collision with floor
    is_below = below(reg01, 0)*below(reg03,0);
    reg01  = is_below*(-reg01) + (1-is_below)*reg01;
    reg03 = is_below*(-reg03) + (1-is_below)*reg03;

    // collision with top
    is_above = above(reg01, 1)*above(reg03,0);
    reg01  = is_above*(2 - reg01)  + (1-is_above)*reg01;
    reg03 = is_above*(-.1*reg03) + (1-is_above)*reg03;

    // set up for wave processing
    reg04=0;
    reg05=0;

    q1 = aspectx;
    q2 = aspecty;
    monitor = q2;
'''

wave_1_per_point='''
    theta = rand(100);
    bx = reg00+.001*rand(10)*cos(theta)/q2;
    by = reg01+.001*rand(10)*sin(theta)/q1;

    // draw wave
    wx = sample/.9;
    wy = value1*.25 + .2;

    // collision detection and handling
    has_ball = below(reg04, reg00)*(1-below(wx, reg00))*(1-is_ball);

    norm_x = wy - reg05;
    norm_y = reg04 - wx;
    len_norm = sqrt(norm_x*norm_x + norm_y*norm_y);
    norm_x = -norm_x/len_norm;
    norm_y = norm_y/len_norm;

    is_below = has_ball*below(reg01, wy);
    reg01  = (1-is_below)*reg01  + is_below*(wy + (wy - reg01));
    reg03 = (1-is_below)*reg03 + is_below*(wy*5);
    reg02 = (1-is_below)*reg02 + is_below*(.5*norm_x);

    // drawing

    is_ball = above(sample, .9);
    x = is_ball*bx + (1-is_ball)*wx;
    y = is_ball*by + (1-is_ball)*wy;
    y = .5 - (.5 - y)/q2;
    monitor = is_ball;


    reg04 = wx;
    reg05 = wy;
'''

wavecode_2_enabled=1
wavecode_2_samples=500
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_smoothing=0.5

wave_2_per_point='''
    x=sample/.9;
    y=value1*.25 + .2;
    y = .5 - (.5 - y)/q2;
'''


warp_='''
    shader_body {
        ret = tex2D(sampler_main, uv)*0.8;
    }
'''
